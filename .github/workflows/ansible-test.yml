name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'
env:
  NAMESPACE: grafana
  COLLECTION_NAME: grafana

jobs:

  # sanity:
  #   name: Sanity (Ⓐ${{ matrix.ansible }})
  #   strategy:
  #     matrix:
  #       ansible:
  #         - stable-2.10
  #         - stable-2.11
  #         - stable-2.12
  #         - devel
  #   runs-on: ubuntu-latest
  #   steps:

  #     - name: Check out code
  #       uses: actions/checkout@v3
  #       with:
  #         path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: '3.9'

  #     - name: Install ansible-base (${{ matrix.ansible }})
  #       run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check
      
  #     - name: Run sanity tests
  #       run: ansible-test sanity --docker -v --color --coverage
  #       working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  #     - name: Generate coverage report
  #       run: ansible-test coverage xml -v --requirements --group-by command --group-by version
  #       working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

  #     - uses: codecov/codecov-action@v3
  #       with:
  #         fail_ci_if_error: false
  
  integration:
    runs-on: ubuntu-latest
    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10 
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
        # - milestone
        python:
          - '2.6'
          - '2.7'
          - '3.5'
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        exclude:
          - ansible: stable-2.9
            python: '3.9'
          - ansible: stable-2.9
            python: '3.10'
          - ansible: stable-2.10
            python: '3.10'
          - ansible: stable-2.11
            python: '3.10'
            
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: create integration_config
        working-directory: tests/integrations
        run: |
          cat <<EOF > integration_config.sample.yml
          ---
          stack_name: ${{ secrets.ANSIBLE_TEST_STACK_NAME }}
          org_name: ${{ secrets.ANSIBLE_TEST_ORG_NAME }}
          grafana_cloud_api_key: ${{ secrets.ANSIBLE_TEST_CLOUD_API_KEY }}
          grafana_api_key: ${{ secrets.ANSIBLE_TEST_GRAFANA_API_KEY }}
          EOF
 
      - name: >-
          Perform integration testing against
          Ansible version ${{ matrix.ansible }}
          under Python ${{ matrix.python }}
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          target-python-version: ${{ matrix.python }}
          testing-type: integration