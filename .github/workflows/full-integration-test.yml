---
name: Full Integration Test

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
env:
  NAMESPACE: grafana
  COLLECTION_NAME: grafana

jobs:

  integration:
    runs-on: ubuntu-20.04
    name: ${{ matrix.ansible }}-py${{ matrix.python }}
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        ansible:
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
        python:
          - '2.7'
          - '3.5'
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        exclude:
          - ansible: stable-2.11
            python: '3.10'

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: create integration_config
        working-directory: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/tests/integration
        run: |
          cat <<EOF > integration_config.yml
          stack_name: ${{ secrets.ANSIBLE_TEST_STACK_NAME }}
          org_name: ${{ secrets.ANSIBLE_TEST_ORG_NAME }}
          grafana_cloud_api_key: ${{ secrets.ANSIBLE_TEST_CLOUD_API_KEY }}
          grafana_api_key: ${{ secrets.ANSIBLE_TEST_GRAFANA_API_KEY }}
          test_stack_name: ${{ secrets.ANSIBLE_TEST_CI_STACK }}
          EOF

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Test module alert_contact_point
        run: ansible-test integration -v alert_contact_point --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module alert_notification_policy
        run: ansible-test integration -v alert_notification_policy --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module cloud_api_key
        run: ansible-test integration -v cloud_api_key --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module cloud_plugin
        run: ansible-test integration -v cloud_plugin --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module cloud_stack
        run: ansible-test integration -v cloud_stack --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module dashboard
        run: ansible-test integration -v dashboard --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Test module datasource
        run: ansible-test integration -v datasource --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: Test module folder
        run: ansible-test integration -v folder --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --coverage --docker
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Cooling Period
        run: sleep 3m
