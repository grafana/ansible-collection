name: CI Tests
on:
  push:
    branches:
      - "main"
  pull_request:
  schedule:
    - cron: '0 6 * * *'
env:
  NAMESPACE: grafana
  COLLECTION_NAME: grafana

jobs:

  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check
      
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
  
  roles:
    runs-on: ubuntu-latest
    name: Integration (Ⓐ${{ matrix.ansible }}-py${{ matrix.python }})
    strategy:
      fail-fast: true
      matrix:
        ansible:
          - stable-2.13
        python:
          - '3.10'
            
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: create Grafana Agent configuration
        working-directory: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/tests/integration
        run: |
          cat <<EOF > roles/grafana_agent/agent-config.yml
          logs:
            configs:
              - clients:
                - basic_auth:
                    password: ${{ secrets.ANSIBLE_TEST_CLOUD_API_KEY }}
                    username: 327080
                  url: https://logs-prod3.grafana.net/loki/api/v1/push
                name: default
                positions:
                  filename: /tmp/positions.yaml
                scrape_configs:
                  - job_name: integrations/node_exporter_direct_scrape
                    static_configs:
                      - targets:
                          - localhost
                        labels:
                          instance: hostname
                          __path__: /var/log/*.log
                          job: integrations/node_exporter
                target_config:
                  sync_period: 10s
          EOF
 
      - name: ansible check with ubuntu:latest
        uses: roles-ansible/check-ansible-ubuntu-latest-action@master
        with:
          targets: roles/grafana_agent/"
  
  integration:
    runs-on: ubuntu-latest
    name: Integration (Ⓐ${{ matrix.ansible }}-py${{ matrix.python }})
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        ansible:
          - stable-2.13
        python:
          - '3.10'
            
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
      
      - name: create integration_config
        working-directory: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/tests/integration
        run: |
          cat <<EOF > integration_config.yml
          stack_name: ${{ secrets.ANSIBLE_TEST_STACK_NAME }}
          org_name: ${{ secrets.ANSIBLE_TEST_ORG_NAME }}
          grafana_cloud_api_key: ${{ secrets.ANSIBLE_TEST_CLOUD_API_KEY }}
          grafana_api_key: ${{ secrets.ANSIBLE_TEST_GRAFANA_API_KEY }}
          EOF
 
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Run integration test
        run: ansible-test integration -v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --docker --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}