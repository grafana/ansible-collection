---
# tasks file for mimir install

- name: Install Mimir
  ansible.builtin.dnf:
    name: "mimir"
    state: present

- name: Check if Mimir default dir is present
  ansible.builtin.stat:
    path: "/tmp/mimir/boltdb-shipper-active"
  register: __default_structure

- name: Default structure cleanup
  when: __default_structure.stat.exists | bool
  block:
    - name: Ensure that Mimir is stopped before default cleanup
      ansible.builtin.systemd:
        name: mimir.service
        state: stopped

    - name: Remove default configuration from "/tmp/mimir" directory
      ansible.builtin.file:
        path: "/tmp/mimir"
        state: absent

- name: Ensure that Mimir working path exists
  ansible.builtin.file:
    path: "{{ mimir_working_path }}"
    state: directory
    owner: "mimir"
    group: "mimir"
    mode: "0755"

- name: Template Mimir config - /etc/mimir/config.yml
  ansible.builtin.template:
    src: "config.yml.j2"
    dest: "/etc/mimir/config.yml"
    owner: "mimir"
    group: "mimir"
    mode: "0644"
  notify:
    - Restart mimir

- name: Ensure that Mimir rule path exists
  ansible.builtin.file:
    path: "{{ mimir_ruler_alert_path }}"
    state: directory
    owner: "mimir"
    group: "mimir"
    mode: "0755"
  when:
    - mimir_ruler_alert_path is defined
    - mimir_ruler is defined

- name: Ensure that Mimir is started
  ansible.builtin.systemd:
    name: mimir.service
    state: started
    enabled: true

- name: Verify that Mimir URL is responding
  ansible.builtin.uri:
    url: "http://127.0.0.1:{{ mimir_http_listen_port }}/ready"
    method: GET
  register: mimir_verify_url_status_code
  retries: 5
  delay: 8
  until: mimir_verify_url_status_code.status == 200
